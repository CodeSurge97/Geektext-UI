{"ast":null,"code":"import { BrowserHistory } from 'react-router-dom';\nimport { LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, LOGIN_USER_REQUEST, LOGOUT_USER, REGISTER_USER_FAILURE, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS } from '../constants/index';\nimport { parseJSON } from '../utils/misc';\nimport { get_token, create_user } from '../utils/http_functions';\nexport function loginUserSuccess(token) {\n  localStorage.setItem('token', token);\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: {\n      token: token\n    }\n  };\n}\nexport function loginUserFailure(error) {\n  localStorage.removeItem('token');\n  return {\n    type: LOGIN_USER_FAILURE,\n    payload: {\n      status: error.response.status,\n      statusText: error.response.statusText\n    }\n  };\n}\nexport function loginUserRequest() {\n  return {\n    type: LOGIN_USER_REQUEST\n  };\n}\nexport function logout() {\n  localStorage.removeItem('token');\n  return {\n    type: LOGOUT_USER\n  };\n}\nexport function logoutAndRedirect() {\n  return function (dispatch) {\n    dispatch(logout());\n    browserHistory.push('/');\n  };\n}\nexport function redirectToRoute(route) {\n  return function () {\n    browserHistory.push(route);\n  };\n}\nexport function loginUser(email, password) {\n  return function (dispatch) {\n    dispatch(loginUserRequest());\n    return get_token(email, password).then(parseJSON).then(function (response) {\n      try {\n        dispatch(loginUserSuccess(response.token));\n        browserHistory.push('/main');\n      } catch (e) {\n        alert(e);\n        dispatch(loginUserFailure({\n          response: {\n            status: 403,\n            statusText: 'Invalid token'\n          }\n        }));\n      }\n    }).catch(function (error) {\n      dispatch(loginUserFailure({\n        response: {\n          status: 403,\n          statusText: 'Invalid username or password'\n        }\n      }));\n    });\n  };\n}\nexport function registerUserRequest() {\n  return {\n    type: REGISTER_USER_REQUEST\n  };\n}\nexport function registerUserSuccess(token) {\n  localStorage.setItem('token', token);\n  return {\n    type: REGISTER_USER_SUCCESS,\n    payload: {\n      token: token\n    }\n  };\n}\nexport function registerUserFailure(error) {\n  localStorage.removeItem('token');\n  return {\n    type: REGISTER_USER_FAILURE,\n    payload: {\n      status: error.response.status,\n      statusText: error.response.statusText\n    }\n  };\n}\nexport function registerUser(email, password) {\n  return function (dispatch) {\n    dispatch(registerUserRequest());\n    return create_user(email, password).then(parseJSON).then(function (response) {\n      try {\n        dispatch(registerUserSuccess(response.token));\n        browserHistory.push('/main');\n      } catch (e) {\n        dispatch(registerUserFailure({\n          response: {\n            status: 403,\n            statusText: 'Invalid token'\n          }\n        }));\n      }\n    }).catch(function (error) {\n      dispatch(registerUserFailure({\n        response: {\n          status: 403,\n          statusText: 'User with that email already exists'\n        }\n      }));\n    });\n  };\n}","map":{"version":3,"sources":["/Data/Documents/fall2018/cen4010/source/ui/src/actions/auth.js"],"names":["BrowserHistory","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","LOGIN_USER_REQUEST","LOGOUT_USER","REGISTER_USER_FAILURE","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","parseJSON","get_token","create_user","loginUserSuccess","token","localStorage","setItem","type","payload","loginUserFailure","error","removeItem","status","response","statusText","loginUserRequest","logout","logoutAndRedirect","dispatch","browserHistory","push","redirectToRoute","route","loginUser","email","password","then","e","alert","catch","registerUserRequest","registerUserSuccess","registerUserFailure","registerUser"],"mappings":"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","sourcesContent":["import { BrowserHistory } from 'react-router-dom';\n\nimport {\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILURE,\n    LOGIN_USER_REQUEST,\n    LOGOUT_USER,\n    REGISTER_USER_FAILURE,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n} from '../constants/index';\n\nimport { parseJSON } from '../utils/misc';\nimport { get_token, create_user } from '../utils/http_functions';\n\n\nexport function loginUserSuccess(token) {\n    localStorage.setItem('token', token);\n    return {\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n            token,\n        },\n    };\n}\n\n\nexport function loginUserFailure(error) {\n    localStorage.removeItem('token');\n    return {\n        type: LOGIN_USER_FAILURE,\n        payload: {\n            status: error.response.status,\n            statusText: error.response.statusText,\n        },\n    };\n}\n\nexport function loginUserRequest() {\n    return {\n        type: LOGIN_USER_REQUEST,\n    };\n}\n\nexport function logout() {\n    localStorage.removeItem('token');\n    return {\n        type: LOGOUT_USER,\n    };\n}\n\nexport function logoutAndRedirect() {\n    return (dispatch) => {\n        dispatch(logout());\n        browserHistory.push('/');\n    };\n}\n\nexport function redirectToRoute(route) {\n    return () => {\n        browserHistory.push(route);\n    };\n}\n\nexport function loginUser(email, password) {\n    return function (dispatch) {\n        dispatch(loginUserRequest());\n        return get_token(email, password)\n            .then(parseJSON)\n            .then(response => {\n                try {\n                    dispatch(loginUserSuccess(response.token));\n                    browserHistory.push('/main');\n                } catch (e) {\n                    alert(e);\n                    dispatch(loginUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'Invalid token',\n                        },\n                    }));\n                }\n            })\n            .catch(error => {\n                dispatch(loginUserFailure({\n                    response: {\n                        status: 403,\n                        statusText: 'Invalid username or password',\n                    },\n                }));\n            });\n    };\n}\n\n\nexport function registerUserRequest() {\n    return {\n        type: REGISTER_USER_REQUEST,\n    };\n}\n\nexport function registerUserSuccess(token) {\n    localStorage.setItem('token', token);\n    return {\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n            token,\n        },\n    };\n}\n\nexport function registerUserFailure(error) {\n    localStorage.removeItem('token');\n    return {\n        type: REGISTER_USER_FAILURE,\n        payload: {\n            status: error.response.status,\n            statusText: error.response.statusText,\n        },\n    };\n}\n\nexport function registerUser(email, password) {\n    return function (dispatch) {\n        dispatch(registerUserRequest());\n        return create_user(email, password)\n            .then(parseJSON)\n            .then(response => {\n                try {\n                    dispatch(registerUserSuccess(response.token));\n                    browserHistory.push('/main');\n                } catch (e) {\n                    dispatch(registerUserFailure({\n                        response: {\n                            status: 403,\n                            statusText: 'Invalid token',\n                        },\n                    }));\n                }\n            })\n            .catch(error => {\n                dispatch(registerUserFailure({\n                    response: {\n                        status: 403,\n                        statusText: 'User with that email already exists',\n                    },\n                }\n                ));\n            });\n    };\n}"]},"metadata":{},"sourceType":"module"}